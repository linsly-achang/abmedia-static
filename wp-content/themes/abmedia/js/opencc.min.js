"use strict";const ENVIRONMENT_IS_NODE="object"==typeof process&&"function"==typeof require;if(ENVIRONMENT_IS_NODE)var fs=require("fs"),util=require("util"),readFilePromise=util.promisify(fs.readFile);const OpenCC={_addWord(t,s,v){for(const c of s){const cp=c.codePointAt(0);t.has(cp)||t.set(cp,new Map),t=t.get(cp)}t.__trie_val=v},async _load_dict(s,type){const DICT_ROOT="https://cdn.jsdelivr.net/npm/opencc-data@1.0.6/data/",DICT_FROM={cn:["STCharacters","STPhrases"],hk:["HKVariantsRev","HKVariantsRevPhrases"],tw:["TWVariantsRev","TWVariantsRevPhrases"],twp:["TWVariantsRev","TWVariantsRevPhrases","TWPhrasesRev"],jp:["JPVariantsRev","JPShinjitaiCharacters","JPShinjitaiPhrases"]},DICT_TO={cn:["TSCharacters","TSPhrases"],hk:["HKVariants"],tw:["TWVariants"],twp:["TWVariants","TWPhrasesIT","TWPhrasesName","TWPhrasesOther"],jp:["JPVariants"]};async function getDictTextNode(url){const pathName=require.resolve("opencc-data/data/"+url+".txt"),response=await readFilePromise(pathName);return response.toString()}async function getDictText(url){const response=await fetch(DICT_ROOT+url+".txt"),text=await response.text();return text}const getDict=ENVIRONMENT_IS_NODE?getDictTextNode:getDictText;let DICTS;"from"===type?DICTS=DICT_FROM[s]:"to"===type&&(DICTS=DICT_TO[s]);const t=new Map;for(const DICT of DICTS){const txt=await getDict(DICT),lines=txt.split("\n");for(const line of lines)if(line&&!line.startsWith("#")){const[l,r]=line.split("\t");this._addWord(t,l,r.split(" ")[0])}}return t},_convert(t,s){const n=s.length,arr=[];let orig_i;for(let i=0;i<n;){let t_curr=t,k=0,v;for(let j=i;j<n;){const x=s.codePointAt(j);j+=x>65535?2:1;const t_next=t_curr.get(x);if(void 0===t_next)break;t_curr=t_next;const v_curr=t_curr.__trie_val;void 0!==v_curr&&(k=j,v=v_curr)}k>0?(null!==orig_i&&(arr.push(s.slice(orig_i,i)),orig_i=null),arr.push(v),i=k):(null===orig_i&&(orig_i=i),i+=s.codePointAt(i)>65535?2:1)}return null!==orig_i&&arr.push(s.slice(orig_i,n)),arr.join("")},async Converter(fromVariant,toVariant){let dictFrom,dictTo;return"t"!==fromVariant&&(dictFrom=await this._load_dict(fromVariant,"from")),"t"!==toVariant&&(dictTo=await this._load_dict(toVariant,"to")),s=>("t"!==fromVariant&&(s=this._convert(dictFrom,s)),"t"!==toVariant&&(s=this._convert(dictTo,s)),s)},CustomConverter(dict){const t=new Map;for(const[k,v]of Object.entries(dict))this._addWord(t,k,v);return s=>this._convert(t,s)},HTMLConverter(convertFunc,startNode,fromLangTag,toLangTag){function convert(){function _inner(currentNode,langMatched){if(currentNode.nodeType!==Node.ELEMENT_NODE||!currentNode.classList.contains("ignore-opencc")){if(currentNode.lang===fromLangTag?(langMatched=!0,currentNode.shouldChangeLang=!0,currentNode.lang=toLangTag):currentNode.lang&&currentNode.lang.length&&(langMatched=!1),langMatched){if("SCRIPT"===currentNode.tagName)return;if("STYLE"===currentNode.tagName)return;"META"===currentNode.tagName&&"description"===currentNode.name?(void 0===currentNode.originalContent&&(currentNode.originalContent=currentNode.content),currentNode.content=convertFunc(currentNode.originalContent)):"META"===currentNode.tagName&&"keywords"===currentNode.name?(void 0===currentNode.originalContent&&(currentNode.originalContent=currentNode.content),currentNode.content=convertFunc(currentNode.originalContent)):"IMG"===currentNode.tagName?(void 0===currentNode.originalAlt&&(currentNode.originalAlt=currentNode.alt),currentNode.alt=convertFunc(currentNode.originalAlt)):"INPUT"===currentNode.tagName&&"button"===currentNode.type&&(void 0===currentNode.originalValue&&(currentNode.originalValue=currentNode.value),currentNode.value=convertFunc(currentNode.originalValue))}for(const node of currentNode.childNodes)node.nodeType===Node.TEXT_NODE&&langMatched?(void 0===node.originalString&&(node.originalString=node.nodeValue),node.nodeValue=convertFunc(node.originalString)):_inner(node,langMatched)}}_inner(startNode,!1)}function restore(){function _inner(currentNode){if(currentNode.nodeType!==Node.ELEMENT_NODE||!currentNode.classList.contains("ignore-opencc")){currentNode.shouldChangeLang&&(currentNode.lang=fromLangTag),void 0!==currentNode.originalString&&(currentNode.nodeValue=currentNode.originalString),"META"===currentNode.tagName&&"description"===currentNode.name?void 0!==currentNode.originalContent&&(currentNode.content=currentNode.originalContent):"META"===currentNode.tagName&&"keywords"===currentNode.name?void 0!==currentNode.originalContent&&(currentNode.content=currentNode.originalContent):"IMG"===currentNode.tagName?void 0!==currentNode.originalAlt&&(currentNode.alt=currentNode.originalAlt):"INPUT"===currentNode.tagName&&"button"===currentNode.type&&void 0!==currentNode.originalValue&&(currentNode.value=currentNode.originalValue);for(const node of currentNode.childNodes)_inner(node)}}_inner(startNode)}return{convert:convert,restore:restore}}};try{module.exports=exports=OpenCC}catch(e){}